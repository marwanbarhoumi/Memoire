name: Login Service CI/CD

on:
  push:
    branches: [ main ]
    paths: ['backend/login/**']
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/login-service
  VERSION: ${{ github.sha }}
  PORT: 7002

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      working-directory: backend/login
      run: npm ci
      
    - name: Run tests
      working-directory: backend/login
      run: npm test -- --coverage
      
    - name: Upload coverage
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: backend/login/coverage

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: backend/login
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/login-service:${{ github.sha }}
          ghcr.io/${{ github.repository_owner }}/login-service:latest
        labels: |
          org.opencontainers.image.source=${{ github.repository_url }}

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    steps:
    - uses: actions/checkout@v4
    
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      
    - name: Deploy to staging
      run: |
        kubectl set image deployment/login-service \
          login-service=ghcr.io/${{ github.repository_owner }}/login-service:${{ github.sha }} \
          -n auth
      env:
        KUBE_CONFIG: ${{ secrets.STAGING_KUBE_CONFIG }}