name: Build, Test and Push Login Service Docker Image

on:
  push:
    branches:
      - main
    paths:
      - 'backend/login/**'  # Déclenche l'action uniquement pour les fichiers du service Login

jobs:
  build:
    runs-on: ubuntu-latest  # Utilise un environnement Ubuntu

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Cette étape récupère le code source du dépôt

      - name: Set up Node.js
        uses: actions/setup-node@v3  # Installe Node.js (si nécessaire pour les tests)
        with:
          node-version: '14'

      - name: Install dependencies
        run: |
          cd backend/login
          npm install  # Installe les dépendances pour le service Login

      - name: Run Tests
        run: |
          cd backend/login
          npm test  # Exécute les tests (assurez-vous que vous avez un script 'test' dans votre package.json)

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2  # Configure Docker Buildx pour faciliter la construction de l'image

      - name: Log in to Docker Hub
        uses: docker/login-action@v2  # Se connecte à Docker Hub
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Utilisation du secret Docker Hub pour l'utilisateur
          password: ${{ secrets.DOCKER_PASSWORD }}  # Utilisation du secret Docker Hub pour le mot de passe

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/login-service:latest ./backend/login  # Construit l'image Docker pour le service Login

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/login-service:latest  # Pousse l'image vers Docker Hub
